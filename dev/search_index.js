var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [ShiftedProximalOperators]","category":"page"},{"location":"reference/#ShiftedProximalOperators.Cappedl1","page":"Reference","title":"ShiftedProximalOperators.Cappedl1","text":"Cappedl1(λ, θ)\n\nReturns the capped L1 approximation to the rank function\n\nf(x) =  lambda min(θ σ(X))\n\nfor nonnegative parameters lambda and theta, and a vector x, where x = textvec(X).\n\n\n\n\n\n","category":"type"},{"location":"reference/#ShiftedProximalOperators.GroupNormL2","page":"Reference","title":"ShiftedProximalOperators.GroupNormL2","text":"GroupNormL2(λ = 1, idx = [:])\n\nReturns the group ell_2-norm operator\n\nf(x) =  sum_i lambda_i x_i_2^12\n\nfor groups x_i and nonnegative weights lambda_i. The group ell_2-norm operator reduces to the ell_2-norm if only one group is defined (the default).\n\n\n\n\n\n","category":"type"},{"location":"reference/#ShiftedProximalOperators.Nuclearnorm","page":"Reference","title":"ShiftedProximalOperators.Nuclearnorm","text":"Nuclearnorm(λ)\n\nReturns the nuclear norm\n\nf(x) =  lambda X_*\n\nfor a nonnegative parameter lambda and a vector x, where x = textvec(X).\n\n\n\n\n\n","category":"type"},{"location":"reference/#ShiftedProximalOperators.Rank","page":"Reference","title":"ShiftedProximalOperators.Rank","text":"Rank(λ)\n\nReturns the rank\n\nf(x) =  lambda textrank(X)\n\nfor a nonnegative parameter lambda and a vector x, where x = textvec(X).\n\n\n\n\n\n","category":"type"},{"location":"reference/#ShiftedProximalOperators.RootNormLhalf","page":"Reference","title":"ShiftedProximalOperators.RootNormLhalf","text":"RootNormLhalf(λ=1)\n\nReturns the ell_12^12 pseudo-norm operator\n\nf(x) = λ sum x^12\n\nwhere lambda  0.\n\n\n\n\n\n","category":"type"},{"location":"reference/#ShiftedProximalOperators.ShiftedProximableFunction","page":"Reference","title":"ShiftedProximalOperators.ShiftedProximableFunction","text":"Abstract type for shifted proximable functions.\n\n\n\n\n\n","category":"type"},{"location":"reference/#ProximalCore.prox!","page":"Reference","title":"ProximalCore.prox!","text":"prox!(y, ψ, q, σ)\n\nEvaluate the proximal operator of a shifted regularizer, i.e, return a solution s of\n\nminimize{s}  ½ σ⁻¹ ‖s - q‖₂² + ψ(s),\n\nwhere\n\nψ is a ShiftedProximableFunction representing a model of h(x + s) and possibly including the indicator of a trust region;\nq is the vector where the shifted proximal operator should be evaluated;\nσ is a positive regularization parameter.\n\nThe solution is stored in the input vector y an y is returned.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ProximalCore.prox-Union{Tuple{V}, Tuple{R}, Tuple{ShiftedProximableFunction, V, R}} where {R<:Real, V<:AbstractVector{R}}","page":"Reference","title":"ProximalCore.prox","text":"prox(ψ, q, σ)\n\nSee the documentation of prox!. In this form, the solution is stored in ψ's internal storage and a reference is returned.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.iprox!","page":"Reference","title":"ShiftedProximalOperators.iprox!","text":"iprox!(y, ψ, g, d)\n\nEvaluate the indefinite proximal operator of a separable box shifted regularizer, i.e, return a solution y of\n\nminimize{y}  ½ yᵀDy + gᵀy + ψ(y)\n\nwhere\n\nψ is a ShiftedProximableFunction representing a model of the sum of a separable function h(x + s) and the indicator of a trust region;\ng is a vector;\nD = Diagonal(d) where d is a vector.\n\nThe solution is stored in the input vector y an y is returned.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ShiftedProximalOperators.iprox-Tuple{ShiftedProximableFunction, AbstractVector, AbstractVector}","page":"Reference","title":"ShiftedProximalOperators.iprox","text":"iprox(ψ, g, d)\n\nSee the documentation of iprox!. In this form, the solution is stored in ψ's internal storage and a reference is returned.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.iprox_zero-Union{Tuple{R}, NTuple{4, R}} where R<:Real","page":"Reference","title":"ShiftedProximalOperators.iprox_zero","text":"iprox_zero(d, g, l, u)\n\nReturn the solution of\n\nmin ½ d y² + g y subject to l ≤ y ≤ u\n\nfor any d, g, assuming that 0 ∈ [l, u] if d < eps() and g = 0. This problem occurs when computing the iprox with respect to a separable nonsmooth term along a variable that is not part of those to which the nonsmooth term is applied.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.prox_zero-Union{Tuple{R}, Tuple{R, R, R}} where R<:Real","page":"Reference","title":"ShiftedProximalOperators.prox_zero","text":"prox_zero(q, l, u)\n\nReturn the solution of\n\nmin ½ σ⁻¹ (y - q)² subject to l ≤ y ≤ u\n\nfor any σ > 0. This problem occurs when computing the prox with respect to a separable nonsmooth term along a variable that is not part of those to which the nonsmooth term is applied.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.set_bounds!-Tuple{ShiftedProximableFunction, Any, Any}","page":"Reference","title":"ShiftedProximalOperators.set_bounds!","text":"set_bounds!(ψ, l, u)\n\nSet the lower and upper bound of the box to l and u, respectively. l and u can be scalars or vectors.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.set_radius!-Union{Tuple{R}, Tuple{ShiftedProximableFunction, R}} where R<:Real","page":"Reference","title":"ShiftedProximalOperators.set_radius!","text":"set_radius!(ψ, Δ)\n\nSet the trust-region radius of a shifted proximable function to Δ. This method updates the indicator of the trust region that is part of ψ.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.shift!-Union{Tuple{R}, Tuple{ShiftedProximableFunction, AbstractVector{R}}} where R<:Real","page":"Reference","title":"ShiftedProximalOperators.shift!","text":"shift!(ψ, x)\n\nUpdate the shift of a shifted proximable function.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ShiftedProximalOperators.shifted","page":"Reference","title":"ShiftedProximalOperators.shifted","text":"shifted(h, x)\nshifted(h, x, Δ, ρ)\n\nConstruct a shifted proximable function from a proximable function or from another shifted proximable function.\n\nIf h is a ProximableFunction, including a ShiftedProximableFunction, the form shifted(h, x) returns a ShiftedProximableFunction ψ such that ψ(s) == h(x + s). Subsequently, prox may be called on ψ. The first form applies when h is a ShiftedProximableFunction and can be used to shift an already-shifted proximable function.\n\nThe form shifted(h, x, Δ, ρ) returns a ShiftedProximableFunction ψ such that ψ(s) == h(x + s) + Ind({‖s‖ ≤ Δ}), where Ind(.) represents the indicator of a set, in this case the indicator of a ball of radius Δ, in which the norm is defined by ρ.\n\nArguments\n\nh::ProximableFunction (including a ShiftedProximableFunction)\nx::AbstractVector\nΔ::Real\nρ::ProximableFunction.\n\nOnly certain combinations of h and ρ are supported; those for which the analytical form of the proximal operator is known.\n\nIf h is a shifted proximable function obtained from a previous call to shifted(), only the form shifted(h, x) is supported. If applicable, the resulting shifted proximable function is associated with the same Δ and ρ as h.\n\nSee the documentation of ProximalOperators.jl for more information.\n\n\n\n\n\n","category":"function"},{"location":"#ShiftedProximalOperators.jl","page":"Home","title":"ShiftedProximalOperators.jl","text":"","category":"section"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ShiftedProximalOperators is a library of proximal operators associated with proper lower-semicontinuous functions such as those implemented in ProximalOperators.jl for use in the algorithms implemented in RegularizedOptimization.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The main differences with the proximal operators implemented in ProximalOperators.jl are that those implemented here involve a shift of the nonsmooth term and may include an extra indicator function. We also implement new proximal operators.","category":"page"},{"location":"#Proximal-operators","page":"Home","title":"Proximal operators","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The operators from  ProximalOperators.jl can be written as","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h(q) = argmin_t left tfrac12t-q^2 + nu h(t) right","category":"page"},{"location":"","page":"Home","title":"Home","text":"We consider a proximal operator from ProximalOperators.jl, for example ProximalOperators.NormL1.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using ProximalOperators, ShiftedProximalOperators\nh = NormL1(1.0) # proximal operator","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package provides the following shifted proximal operators, where x and s are fixed shifts, h is the nonsmooth term with respect to which we are computing the proximal operator.","category":"page"},{"location":"#Basic-shifted-proximal-operator","page":"Home","title":"Basic shifted proximal operator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ψ = shifted(h, x)","category":"page"},{"location":"","page":"Home","title":"Home","text":"models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h(q x) = argmin_t left tfrac12t-q^2 + nu h(x + t) right","category":"page"},{"location":"","page":"Home","title":"Home","text":"ψ can be shifted again using","category":"page"},{"location":"","page":"Home","title":"Home","text":"ψs = shifted(ψ, sj)","category":"page"},{"location":"","page":"Home","title":"Home","text":"which models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h(q x s) = argmin_t left tfrac12t-q^2 + nu h(x + s + t) right","category":"page"},{"location":"#Ball-shifted-proximal-operator","page":"Home","title":"Ball shifted proximal operator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let χ(.; ΔB) be the indicator of a ball of radius Δ defined by a certain norm.","category":"page"},{"location":"","page":"Home","title":"Home","text":"χ = NormL2(1.0) # choose the 2-norm for χ\nψ = shifted(h, x, Δ, χ) # Δ is the radius of the ball ΔB","category":"page"},{"location":"","page":"Home","title":"Home","text":"models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h + chi(q x) = argmin_t left tfrac12t-q^2 + nu h(x + t) + chi (t Delta mathcalB) right","category":"page"},{"location":"","page":"Home","title":"Home","text":"ψ can be shifted again using","category":"page"},{"location":"","page":"Home","title":"Home","text":"ψs = shifted(ψ, sj)","category":"page"},{"location":"","page":"Home","title":"Home","text":"which models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h + chi(q x s) = argmin_t left tfrac12t-q^2 + nu h(x + s + t) + chi (s + t Delta mathcalB) right","category":"page"},{"location":"#Box-shifted-proximal-operator","page":"Home","title":"Box shifted proximal operator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ψ = shifted(h, x, l, u)","category":"page"},{"location":"","page":"Home","title":"Home","text":"models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h + chi(q x) = argmin_t left tfrac12t-q^2 + nu h(x + t) + chi (t ell u) right","category":"page"},{"location":"","page":"Home","title":"Home","text":"where χ(t; [ℓ, u]) is 0 if tᵢ ∈ [ℓᵢ, uᵢ] for all i ∈ [1, length(t)] and +∞ otherwise. ψ can be shifted again using","category":"page"},{"location":"","page":"Home","title":"Home","text":"ψs = shifted(ψ, sj)","category":"page"},{"location":"","page":"Home","title":"Home","text":"which models","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathrmprox_nu h + chi(q x s) = argmin_t left tfrac12t-q^2 + nu h(x + s + t) + chi (s + t ell u) right","category":"page"},{"location":"tutorial/#ShiftedProximalOperators-Tutorial","page":"Tutorial","title":"ShiftedProximalOperators Tutorial","text":"","category":"section"}]
}
